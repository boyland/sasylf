package regression;

// SASyLF through 1.2.4 
// leaks contexts from mutually recursive methods and complains
// about reuse of variables.



terminals all Top



syntax



T ::= X
 | Top
 | T -> T
 | ∀ X <: T ∙ T[X]



Γ ::= *
      |   Γ, X <: T


judgment tvar : T <: T ∈ Γ
assumes Γ

------------------- TVAR
X <: T ∈ (Γ, X <: T) 



judgment subtyping: Γ |- T <: T'
assumes Γ


----------------- SA-Top
Γ |- T <: Top


T <: T' ∈ Γ
----------------------- SA-Refl-TVar
Γ |- T <: T



Γ |- T1 <: T1'
Γ |- T2' <: T2
------------------------------- SA-Arrow
Γ |- T1' -> T2' <: T1 -> T2


// for this regression test, no SA-All



/************************ THEOREMS **************************************/




theorem subtyping-transitive:
    assumes Γ
    forall T2 assumes Γ
    forall s1: Γ |- T1 <: T2
    forall s2: Γ |- T2 <: T3
    exists Γ |- T1 <: T3.
    proof by case analysis on s1:
        case rule
            --------------- SA-Top
            _: Γ |- T1 <: Top
        is
             proof by case analysis on s2:
                case rule
                    ------------------ SA-Top
                    _: Γ |- Top <: Top
                is
                    proof by rule SA-Top
                end case 
                case rule
                    v: Top<:T4 ∈ Γ
                    ------------------ SA-Refl-TVar
                    _: Γ |- Top <: Top
                is
                    proof by rule SA-Top
                end case
            end case analysis
        end case
        
        case rule
            v: T1<:T4 ∈ Γ
            ---------------- SA-Refl-TVar
            _: Γ |- T1 <: T1
        is
            proof by s2
        end case
    
        // BUG: it complains about T11 (and if renamed, about T22)
        // because of the mutually recursive theorem
        case rule
            s11: Γ |- T21 <: T11
            s12: Γ |- T12 <: T22
            ------------------------------- SA-Arrow
            _: Γ |- T11 -> T12 <: T21 -> T22
        is
            proof by case analysis on s2:
                case rule
                    ------------------------- SA-Top
                    _: Γ |- T21 -> T22 <: Top
                is
                    proof by rule SA-Top
                end case
                
                case rule
                    v2: (T21->T22)<:T2' ∈ Γ
                    -------------------------------- SA-Refl-TVar
                    _: Γ |- (T21->T22) <: (T21->T22)
                is
                    proof by contradiction on v2
                end case
                
                case rule
                    s21: Γ |- T31 <: T21
                    s22: Γ |- T22 <: T32
                    -------------------------------- SA-Arrow
                    _: Γ |- T21 -> T22 <: T31 -> T32
                is
                    s13: Γ |- T31 <: T11 by theorem subtyping-transitive on T21, s21, s11
                    s23: Γ |- T12 <: T32 by theorem subtyping-transitive on T22, s12, s22
                    proof by rule SA-Arrow on s13, s23
                end case
            end case analysis
        end case
        
    end case analysis
end theorem
and
lemma trivial:
    assumes Γ
    forall s1: Γ, X<:T' |- T11[X] <: T22[X] // Also: BUG: T1, T2 should be OK.
    forall s2: Γ |- T <: T'
    exists Γ, X<:T' |- T11[X] <: T22[X].
    proof by s1
end lemma
 
    